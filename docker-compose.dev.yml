version: '3.8'

services:
  nginx:
    build:
      context: ./
      dockerfile: ./docker/nginx/Dockerfile
    restart: ${DOCKER_RESTART}
    volumes:
      - ./docker/nginx/etc/conf.d:/etc/nginx/conf.d:ro
      - ./api:/var/www/app
    ports:
      - "80:80"
      - "8080:8080"
    depends_on:
      - frontend
#      - backend
      - api

  api:
    build:
      context: ./
      dockerfile: ./docker/api/dev.Dockerfile
    restart: ${DOCKER_RESTART}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./api:/var/www/app

#  backend:
#    build:
#      context: ./
#      dockerfile: ./docker/backend/dev.Dockerfile
#    restart: ${DOCKER_RESTART}
#    environment:
#      DOMAIN: ${DOMAIN}
#      BACKEND_ENV: ${BACKEND_ENV}
#      BACKEND_DEBUG: ${BACKEND_DEBUG}
#      BACKEND_AUTH_TOKEN: ${BACKEND_AUTH_TOKEN}
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
#      REDIS_PASSWORD: ${REDIS_PASSWORD}
#    depends_on:
#      - postgres
#      - redis
#    volumes:
#      - ./backend:/var/www/app

  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend/dev.Dockerfile
    restart: ${DOCKER_RESTART}
    stdin_open: true
    tty: true
    volumes:
      - /app/node_modules
      - /app/.next
      - ./frontend:/app

  postgres:
    image: postgres:17.0-alpine3.20
    restart: always
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/var/lib/postgresql:/var/lib/postgresql

  redis:
    image: redis:7.4.1-alpine
    restart: ${DOCKER_RESTART}
    ports:
      - "6543:6379"
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "${REDIS_PASSWORD}"
