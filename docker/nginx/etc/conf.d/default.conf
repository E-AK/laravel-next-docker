server {
    listen 80 default_server;
    server_name localhost;
    server_tokens off;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    location / {
        proxy_pass http://frontend:3000;
    }

    location /api/auth {
        proxy_pass http://user_service:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location = /auth {
        internal;
        proxy_pass http://user_service:8080/api/user/me;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
    }

    location /api/ {
        auth_request /auth;

        error_page 401 = @error401;

        auth_request_set $user_id $upstream_http_x_user_id;
        auth_request_set $user_email $upstream_http_x_user_email;

        location /api/user {
            proxy_pass http://user_service:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/tasks {
            proxy_pass http://task_service:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-User-ID $user_id;
        }

        location /api/notifications {
            proxy_pass http://notification_service:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-User-ID $user_id;
            proxy_set_header X-User-Email $user_email;
        }
    }

    # Обработка ошибки 401
    location @error401 {
        return 401 '{"error": "Unauthorized"}';
    }
}