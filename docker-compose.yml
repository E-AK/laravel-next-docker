services:
  nginx:
    build:
      context: ./
      dockerfile: ./docker/nginx/Dockerfile
    restart: ${DOCKER_RESTART}
    volumes:
      - ./docker/nginx/etc/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - user_service

  user_service:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
      args:
        SERVICE_NAME: user_service
        PHP_VERSION: 8.3
    restart: ${DOCKER_RESTART}
    depends_on:
      - postgres_user_service
      - rabbitmq
    volumes:
      - ./user_service:/var/www/app

  task_service:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
      args:
        SERVICE_NAME: task_service
        PHP_VERSION: 8.3
    restart: ${DOCKER_RESTART}
    depends_on:
      - postgres_task_service
      - rabbitmq
    volumes:
      - ./task_service:/var/www/app
    ports:
      - "8080:8080"

  notification_service:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile
      args:
        SERVICE_NAME: notification_service
        PHP_VERSION: 8.3
    restart: ${DOCKER_RESTART}
    depends_on:
      - postgres_notification_service
      - rabbitmq
    volumes:
      - ./notification_service:/var/www/app

  frontend:
    build:
      context: ./
      dockerfile: ./docker/frontend/Dockerfile
    restart: ${DOCKER_RESTART}
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/node_modules:/app/node_modules
      - /app/node_modules
      - /app/.next

  postgres_user_service:
    image: postgres:17.0-alpine3.20
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB_USER_SERVICE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker/postgres_user_service/var/lib/postgresql:/var/lib/postgresql
    ports:
      - "5432:5432"

  postgres_task_service:
    image: postgres:17.0-alpine3.20
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB_TASK_SERVICE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker/postgres_task_service/var/lib/postgresql:/var/lib/postgresql
    ports:
      - "5431:5432"

  postgres_notification_service:
    image: postgres:17.0-alpine3.20
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NOTIFICATION_SERVICE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker/postgres_notification_service/var/lib/postgresql:/var/lib/postgresql
    ports:
      - "5430:5432"

  rabbitmq:
    image: rabbitmq:4.0.4-management-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  mailhog:
    container_name: mailhog
    restart: ${DOCKER_RESTART}
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
      - "1025:1025"